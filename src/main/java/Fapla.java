// Generated from Fapla.g4 by ANTLR 4.5
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class Fapla extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		Literal=1, PrimitiveType=2, STRING=3, REAL=4, BOOL=5, ELSE=6, THEN=7, 
		IF=8, RETURN=9, WHILE=10, MODULE=11, BEGIN=12, END=13, MAIN=14, INPUT=15, 
		OUTPUT=16, WRITE=17, READ=18, SEMI=19, COMMA=20, DOT=21, ASSIGN=22, GT=23, 
		LT=24, FACTORIAL=25, QUESTION=26, COLON=27, EQUAL=28, LE=29, GE=30, NOTEQUAL=31, 
		AND=32, OR=33, NOT=34, XOR=35, ADD=36, SUB=37, MUL=38, DIV=39, POW=40, 
		MOD=41, PO=42, PC=43, Identifier=44, WS=45, COMMENT=46, LINE_COMMENT=47;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"Literal", "PrimitiveType", "STRING", "REAL", "BOOL", "ELSE", "THEN", 
		"IF", "RETURN", "WHILE", "MODULE", "BEGIN", "END", "MAIN", "INPUT", "OUTPUT", 
		"WRITE", "READ", "SEMI", "COMMA", "DOT", "ASSIGN", "GT", "LT", "FACTORIAL", 
		"QUESTION", "COLON", "EQUAL", "LE", "GE", "NOTEQUAL", "AND", "OR", "NOT", 
		"XOR", "ADD", "SUB", "MUL", "DIV", "POW", "MOD", "PO", "PC", "A", "DigitOrLetter", 
		"Identifier", "WS", "COMMENT", "LINE_COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, null, "'String'", "'Real'", "'Bool'", "'else'", "'then'", 
		"'if'", "'return'", "'while'", null, "'Begin'", "'End'", null, null, null, 
		"'write'", "'read'", "';'", "','", "'.'", "'='", "'>'", "'<'", "'!'", 
		"'?'", "':'", "'=='", "'<='", "'>='", "'<>'", "'and'", "'or'", "'not'", 
		"'xor'", "'+'", "'-'", "'*'", "'/'", "'^'", "'%'", "'('", "')'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "Literal", "PrimitiveType", "STRING", "REAL", "BOOL", "ELSE", "THEN", 
		"IF", "RETURN", "WHILE", "MODULE", "BEGIN", "END", "MAIN", "INPUT", "OUTPUT", 
		"WRITE", "READ", "SEMI", "COMMA", "DOT", "ASSIGN", "GT", "LT", "FACTORIAL", 
		"QUESTION", "COLON", "EQUAL", "LE", "GE", "NOTEQUAL", "AND", "OR", "NOT", 
		"XOR", "ADD", "SUB", "MUL", "DIV", "POW", "MOD", "PO", "PC", "Identifier",
		"WS", "COMMENT", "LINE_COMMENT"
	};

	public String[] getSymbolicNames(){
		return this._SYMBOLIC_NAMES;
	}

	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public Fapla(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Fapla.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\61\u01da\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\3\2\6\2g\n\2\r"+
		"\2\16\2h\3\2\6\2l\n\2\r\2\16\2m\3\2\3\2\6\2r\n\2\r\2\16\2s\3\2\3\2\3\2"+
		"\6\2y\n\2\r\2\16\2z\3\2\3\2\3\2\6\2\u0080\n\2\r\2\16\2\u0081\3\2\3\2\3"+
		"\2\3\2\6\2\u0088\n\2\r\2\16\2\u0089\3\2\3\2\7\2\u008e\n\2\f\2\16\2\u0091"+
		"\13\2\5\2\u0093\n\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\5\2\u009f"+
		"\n\2\3\3\3\3\3\3\5\3\u00a4\n\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5"+
		"\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3"+
		"\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3"+
		"\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\5\f\u00dd\n\f\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17"+
		"\3\17\5\17\u00f1\n\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20"+
		"\5\20\u00fd\n\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\5\21\u010b\n\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23"+
		"\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32"+
		"\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37"+
		"\3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3$\3%\3%\3&\3&"+
		"\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3/\3/\3/\3/\3"+
		"/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\3"+
		"/\3/\3/\5/\u0179\n/\5/\u017b\n/\5/\u017d\n/\5/\u017f\n/\5/\u0181\n/\5"+
		"/\u0183\n/\5/\u0185\n/\5/\u0187\n/\5/\u0189\n/\5/\u018b\n/\5/\u018d\n"+
		"/\5/\u018f\n/\5/\u0191\n/\5/\u0193\n/\5/\u0195\n/\5/\u0197\n/\5/\u0199"+
		"\n/\5/\u019b\n/\5/\u019d\n/\5/\u019f\n/\5/\u01a1\n/\5/\u01a3\n/\5/\u01a5"+
		"\n/\5/\u01a7\n/\5/\u01a9\n/\5/\u01ab\n/\5/\u01ad\n/\5/\u01af\n/\5/\u01b1"+
		"\n/\5/\u01b3\n/\5/\u01b5\n/\5/\u01b7\n/\3\60\6\60\u01ba\n\60\r\60\16\60"+
		"\u01bb\3\60\3\60\3\61\3\61\3\61\3\61\3\61\7\61\u01c5\n\61\f\61\16\61\u01c8"+
		"\13\61\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\7\62\u01d4\n"+
		"\62\f\62\16\62\u01d7\13\62\3\62\3\62\2\2\63\3\3\5\4\7\5\t\6\13\7\r\b\17"+
		"\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+"+
		"\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+"+
		"U,W-Y\2[\2]._/a\60c\61\3\2\13\3\2\62;\4\2ZZzz\5\2\62;CHch\4\2\f\f\17\17"+
		"\4\2CCcc\6\2//\62;C\\c|\4\2C\\c|\5\2\13\f\16\17\"\"\4\2\'\'))\u020e\2"+
		"\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2"+
		"\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2"+
		"\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2"+
		"\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2"+
		"\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2"+
		"\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2"+
		"\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U"+
		"\3\2\2\2\2W\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\3\u009e"+
		"\3\2\2\2\5\u00a3\3\2\2\2\7\u00a5\3\2\2\2\t\u00ac\3\2\2\2\13\u00b1\3\2"+
		"\2\2\r\u00b6\3\2\2\2\17\u00bb\3\2\2\2\21\u00c0\3\2\2\2\23\u00c3\3\2\2"+
		"\2\25\u00ca\3\2\2\2\27\u00dc\3\2\2\2\31\u00de\3\2\2\2\33\u00e4\3\2\2\2"+
		"\35\u00f0\3\2\2\2\37\u00fc\3\2\2\2!\u010a\3\2\2\2#\u010c\3\2\2\2%\u0112"+
		"\3\2\2\2\'\u0117\3\2\2\2)\u0119\3\2\2\2+\u011b\3\2\2\2-\u011d\3\2\2\2"+
		"/\u011f\3\2\2\2\61\u0121\3\2\2\2\63\u0123\3\2\2\2\65\u0125\3\2\2\2\67"+
		"\u0127\3\2\2\29\u0129\3\2\2\2;\u012c\3\2\2\2=\u012f\3\2\2\2?\u0132\3\2"+
		"\2\2A\u0135\3\2\2\2C\u0139\3\2\2\2E\u013c\3\2\2\2G\u0140\3\2\2\2I\u0144"+
		"\3\2\2\2K\u0146\3\2\2\2M\u0148\3\2\2\2O\u014a\3\2\2\2Q\u014c\3\2\2\2S"+
		"\u014e\3\2\2\2U\u0150\3\2\2\2W\u0152\3\2\2\2Y\u0154\3\2\2\2[\u0156\3\2"+
		"\2\2]\u0158\3\2\2\2_\u01b9\3\2\2\2a\u01bf\3\2\2\2c\u01cf\3\2\2\2eg\t\2"+
		"\2\2fe\3\2\2\2gh\3\2\2\2hf\3\2\2\2hi\3\2\2\2i\u009f\3\2\2\2jl\t\2\2\2"+
		"kj\3\2\2\2lm\3\2\2\2mk\3\2\2\2mn\3\2\2\2no\3\2\2\2oq\5+\26\2pr\t\2\2\2"+
		"qp\3\2\2\2rs\3\2\2\2sq\3\2\2\2st\3\2\2\2t\u009f\3\2\2\2uv\7\62\2\2vx\t"+
		"\3\2\2wy\t\4\2\2xw\3\2\2\2yz\3\2\2\2zx\3\2\2\2z{\3\2\2\2{\u009f\3\2\2"+
		"\2|}\7\62\2\2}\177\t\3\2\2~\u0080\t\4\2\2\177~\3\2\2\2\u0080\u0081\3\2"+
		"\2\2\u0081\177\3\2\2\2\u0081\u0082\3\2\2\2\u0082\u0083\3\2\2\2\u0083\u0084"+
		"\5+\26\2\u0084\u0085\7\62\2\2\u0085\u0087\t\3\2\2\u0086\u0088\t\4\2\2"+
		"\u0087\u0086\3\2\2\2\u0088\u0089\3\2\2\2\u0089\u0087\3\2\2\2\u0089\u008a"+
		"\3\2\2\2\u008a\u009f\3\2\2\2\u008b\u0092\7$\2\2\u008c\u008e\n\5\2\2\u008d"+
		"\u008c\3\2\2\2\u008e\u0091\3\2\2\2\u008f\u008d\3\2\2\2\u008f\u0090\3\2"+
		"\2\2\u0090\u0093\3\2\2\2\u0091\u008f\3\2\2\2\u0092\u008f\3\2\2\2\u0092"+
		"\u0093\3\2\2\2\u0093\u0094\3\2\2\2\u0094\u009f\7$\2\2\u0095\u0096\7v\2"+
		"\2\u0096\u0097\7t\2\2\u0097\u0098\7w\2\2\u0098\u009f\7g\2\2\u0099\u009a"+
		"\7h\2\2\u009a\u009b\7c\2\2\u009b\u009c\7n\2\2\u009c\u009d\7u\2\2\u009d"+
		"\u009f\7g\2\2\u009ef\3\2\2\2\u009ek\3\2\2\2\u009eu\3\2\2\2\u009e|\3\2"+
		"\2\2\u009e\u008b\3\2\2\2\u009e\u0095\3\2\2\2\u009e\u0099\3\2\2\2\u009f"+
		"\4\3\2\2\2\u00a0\u00a4\5\13\6\2\u00a1\u00a4\5\t\5\2\u00a2\u00a4\5\7\4"+
		"\2\u00a3\u00a0\3\2\2\2\u00a3\u00a1\3\2\2\2\u00a3\u00a2\3\2\2\2\u00a4\6"+
		"\3\2\2\2\u00a5\u00a6\7U\2\2\u00a6\u00a7\7v\2\2\u00a7\u00a8\7t\2\2\u00a8"+
		"\u00a9\7k\2\2\u00a9\u00aa\7p\2\2\u00aa\u00ab\7i\2\2\u00ab\b\3\2\2\2\u00ac"+
		"\u00ad\7T\2\2\u00ad\u00ae\7g\2\2\u00ae\u00af\7c\2\2\u00af\u00b0\7n\2\2"+
		"\u00b0\n\3\2\2\2\u00b1\u00b2\7D\2\2\u00b2\u00b3\7q\2\2\u00b3\u00b4\7q"+
		"\2\2\u00b4\u00b5\7n\2\2\u00b5\f\3\2\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8"+
		"\7n\2\2\u00b8\u00b9\7u\2\2\u00b9\u00ba\7g\2\2\u00ba\16\3\2\2\2\u00bb\u00bc"+
		"\7v\2\2\u00bc\u00bd\7j\2\2\u00bd\u00be\7g\2\2\u00be\u00bf\7p\2\2\u00bf"+
		"\20\3\2\2\2\u00c0\u00c1\7k\2\2\u00c1\u00c2\7h\2\2\u00c2\22\3\2\2\2\u00c3"+
		"\u00c4\7t\2\2\u00c4\u00c5\7g\2\2\u00c5\u00c6\7v\2\2\u00c6\u00c7\7w\2\2"+
		"\u00c7\u00c8\7t\2\2\u00c8\u00c9\7p\2\2\u00c9\24\3\2\2\2\u00ca\u00cb\7"+
		"y\2\2\u00cb\u00cc\7j\2\2\u00cc\u00cd\7k\2\2\u00cd\u00ce\7n\2\2\u00ce\u00cf"+
		"\7g\2\2\u00cf\26\3\2\2\2\u00d0\u00d1\7o\2\2\u00d1\u00d2\7q\2\2\u00d2\u00d3"+
		"\7f\2\2\u00d3\u00d4\7w\2\2\u00d4\u00d5\7n\2\2\u00d5\u00dd\7g\2\2\u00d6"+
		"\u00d7\7O\2\2\u00d7\u00d8\7q\2\2\u00d8\u00d9\7f\2\2\u00d9\u00da\7w\2\2"+
		"\u00da\u00db\7n\2\2\u00db\u00dd\7g\2\2\u00dc\u00d0\3\2\2\2\u00dc\u00d6"+
		"\3\2\2\2\u00dd\30\3\2\2\2\u00de\u00df\7D\2\2\u00df\u00e0\7g\2\2\u00e0"+
		"\u00e1\7i\2\2\u00e1\u00e2\7k\2\2\u00e2\u00e3\7p\2\2\u00e3\32\3\2\2\2\u00e4"+
		"\u00e5\7G\2\2\u00e5\u00e6\7p\2\2\u00e6\u00e7\7f\2\2\u00e7\34\3\2\2\2\u00e8"+
		"\u00e9\7O\2\2\u00e9\u00ea\7c\2\2\u00ea\u00eb\7k\2\2\u00eb\u00f1\7p\2\2"+
		"\u00ec\u00ed\7o\2\2\u00ed\u00ee\7c\2\2\u00ee\u00ef\7k\2\2\u00ef\u00f1"+
		"\7p\2\2\u00f0\u00e8\3\2\2\2\u00f0\u00ec\3\2\2\2\u00f1\36\3\2\2\2\u00f2"+
		"\u00f3\7K\2\2\u00f3\u00f4\7p\2\2\u00f4\u00f5\7r\2\2\u00f5\u00f6\7w\2\2"+
		"\u00f6\u00fd\7v\2\2\u00f7\u00f8\7k\2\2\u00f8\u00f9\7p\2\2\u00f9\u00fa"+
		"\7r\2\2\u00fa\u00fb\7w\2\2\u00fb\u00fd\7v\2\2\u00fc\u00f2\3\2\2\2\u00fc"+
		"\u00f7\3\2\2\2\u00fd \3\2\2\2\u00fe\u00ff\7Q\2\2\u00ff\u0100\7w\2\2\u0100"+
		"\u0101\7v\2\2\u0101\u0102\7r\2\2\u0102\u0103\7w\2\2\u0103\u010b\7v\2\2"+
		"\u0104\u0105\7q\2\2\u0105\u0106\7w\2\2\u0106\u0107\7v\2\2\u0107\u0108"+
		"\7r\2\2\u0108\u0109\7w\2\2\u0109\u010b\7v\2\2\u010a\u00fe\3\2\2\2\u010a"+
		"\u0104\3\2\2\2\u010b\"\3\2\2\2\u010c\u010d\7y\2\2\u010d\u010e\7t\2\2\u010e"+
		"\u010f\7k\2\2\u010f\u0110\7v\2\2\u0110\u0111\7g\2\2\u0111$\3\2\2\2\u0112"+
		"\u0113\7t\2\2\u0113\u0114\7g\2\2\u0114\u0115\7c\2\2\u0115\u0116\7f\2\2"+
		"\u0116&\3\2\2\2\u0117\u0118\7=\2\2\u0118(\3\2\2\2\u0119\u011a\7.\2\2\u011a"+
		"*\3\2\2\2\u011b\u011c\7\60\2\2\u011c,\3\2\2\2\u011d\u011e\7?\2\2\u011e"+
		".\3\2\2\2\u011f\u0120\7@\2\2\u0120\60\3\2\2\2\u0121\u0122\7>\2\2\u0122"+
		"\62\3\2\2\2\u0123\u0124\7#\2\2\u0124\64\3\2\2\2\u0125\u0126\7A\2\2\u0126"+
		"\66\3\2\2\2\u0127\u0128\7<\2\2\u01288\3\2\2\2\u0129\u012a\7?\2\2\u012a"+
		"\u012b\7?\2\2\u012b:\3\2\2\2\u012c\u012d\7>\2\2\u012d\u012e\7?\2\2\u012e"+
		"<\3\2\2\2\u012f\u0130\7@\2\2\u0130\u0131\7?\2\2\u0131>\3\2\2\2\u0132\u0133"+
		"\7>\2\2\u0133\u0134\7@\2\2\u0134@\3\2\2\2\u0135\u0136\7c\2\2\u0136\u0137"+
		"\7p\2\2\u0137\u0138\7f\2\2\u0138B\3\2\2\2\u0139\u013a\7q\2\2\u013a\u013b"+
		"\7t\2\2\u013bD\3\2\2\2\u013c\u013d\7p\2\2\u013d\u013e\7q\2\2\u013e\u013f"+
		"\7v\2\2\u013fF\3\2\2\2\u0140\u0141\7z\2\2\u0141\u0142\7q\2\2\u0142\u0143"+
		"\7t\2\2\u0143H\3\2\2\2\u0144\u0145\7-\2\2\u0145J\3\2\2\2\u0146\u0147\7"+
		"/\2\2\u0147L\3\2\2\2\u0148\u0149\7,\2\2\u0149N\3\2\2\2\u014a\u014b\7\61"+
		"\2\2\u014bP\3\2\2\2\u014c\u014d\7`\2\2\u014dR\3\2\2\2\u014e\u014f\7\'"+
		"\2\2\u014fT\3\2\2\2\u0150\u0151\7*\2\2\u0151V\3\2\2\2\u0152\u0153\7+\2"+
		"\2\u0153X\3\2\2\2\u0154\u0155\t\6\2\2\u0155Z\3\2\2\2\u0156\u0157\t\7\2"+
		"\2\u0157\\\3\2\2\2\u0158\u01b6\t\b\2\2\u0159\u01b4\5[.\2\u015a\u01b2\5"+
		"[.\2\u015b\u01b0\5[.\2\u015c\u01ae\5[.\2\u015d\u01ac\5[.\2\u015e\u01aa"+
		"\5[.\2\u015f\u01a8\5[.\2\u0160\u01a6\5[.\2\u0161\u01a4\5[.\2\u0162\u01a2"+
		"\5[.\2\u0163\u01a0\5[.\2\u0164\u019e\5[.\2\u0165\u019c\5[.\2\u0166\u019a"+
		"\5[.\2\u0167\u0198\5[.\2\u0168\u0196\5[.\2\u0169\u0194\5[.\2\u016a\u0192"+
		"\5[.\2\u016b\u0190\5[.\2\u016c\u018e\5[.\2\u016d\u018c\5[.\2\u016e\u018a"+
		"\5[.\2\u016f\u0188\5[.\2\u0170\u0186\5[.\2\u0171\u0184\5[.\2\u0172\u0182"+
		"\5[.\2\u0173\u0180\5[.\2\u0174\u017e\5[.\2\u0175\u017c\5[.\2\u0176\u017a"+
		"\5[.\2\u0177\u0179\5[.\2\u0178\u0177\3\2\2\2\u0178\u0179\3\2\2\2\u0179"+
		"\u017b\3\2\2\2\u017a\u0178\3\2\2\2\u017a\u017b\3\2\2\2\u017b\u017d\3\2"+
		"\2\2\u017c\u0176\3\2\2\2\u017c\u017d\3\2\2\2\u017d\u017f\3\2\2\2\u017e"+
		"\u0175\3\2\2\2\u017e\u017f\3\2\2\2\u017f\u0181\3\2\2\2\u0180\u0174\3\2"+
		"\2\2\u0180\u0181\3\2\2\2\u0181\u0183\3\2\2\2\u0182\u0173\3\2\2\2\u0182"+
		"\u0183\3\2\2\2\u0183\u0185\3\2\2\2\u0184\u0172\3\2\2\2\u0184\u0185\3\2"+
		"\2\2\u0185\u0187\3\2\2\2\u0186\u0171\3\2\2\2\u0186\u0187\3\2\2\2\u0187"+
		"\u0189\3\2\2\2\u0188\u0170\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u018b\3\2"+
		"\2\2\u018a\u016f\3\2\2\2\u018a\u018b\3\2\2\2\u018b\u018d\3\2\2\2\u018c"+
		"\u016e\3\2\2\2\u018c\u018d\3\2\2\2\u018d\u018f\3\2\2\2\u018e\u016d\3\2"+
		"\2\2\u018e\u018f\3\2\2\2\u018f\u0191\3\2\2\2\u0190\u016c\3\2\2\2\u0190"+
		"\u0191\3\2\2\2\u0191\u0193\3\2\2\2\u0192\u016b\3\2\2\2\u0192\u0193\3\2"+
		"\2\2\u0193\u0195\3\2\2\2\u0194\u016a\3\2\2\2\u0194\u0195\3\2\2\2\u0195"+
		"\u0197\3\2\2\2\u0196\u0169\3\2\2\2\u0196\u0197\3\2\2\2\u0197\u0199\3\2"+
		"\2\2\u0198\u0168\3\2\2\2\u0198\u0199\3\2\2\2\u0199\u019b\3\2\2\2\u019a"+
		"\u0167\3\2\2\2\u019a\u019b\3\2\2\2\u019b\u019d\3\2\2\2\u019c\u0166\3\2"+
		"\2\2\u019c\u019d\3\2\2\2\u019d\u019f\3\2\2\2\u019e\u0165\3\2\2\2\u019e"+
		"\u019f\3\2\2\2\u019f\u01a1\3\2\2\2\u01a0\u0164\3\2\2\2\u01a0\u01a1\3\2"+
		"\2\2\u01a1\u01a3\3\2\2\2\u01a2\u0163\3\2\2\2\u01a2\u01a3\3\2\2\2\u01a3"+
		"\u01a5\3\2\2\2\u01a4\u0162\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5\u01a7\3\2"+
		"\2\2\u01a6\u0161\3\2\2\2\u01a6\u01a7\3\2\2\2\u01a7\u01a9\3\2\2\2\u01a8"+
		"\u0160\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9\u01ab\3\2\2\2\u01aa\u015f\3\2"+
		"\2\2\u01aa\u01ab\3\2\2\2\u01ab\u01ad\3\2\2\2\u01ac\u015e\3\2\2\2\u01ac"+
		"\u01ad\3\2\2\2\u01ad\u01af\3\2\2\2\u01ae\u015d\3\2\2\2\u01ae\u01af\3\2"+
		"\2\2\u01af\u01b1\3\2\2\2\u01b0\u015c\3\2\2\2\u01b0\u01b1\3\2\2\2\u01b1"+
		"\u01b3\3\2\2\2\u01b2\u015b\3\2\2\2\u01b2\u01b3\3\2\2\2\u01b3\u01b5\3\2"+
		"\2\2\u01b4\u015a\3\2\2\2\u01b4\u01b5\3\2\2\2\u01b5\u01b7\3\2\2\2\u01b6"+
		"\u0159\3\2\2\2\u01b6\u01b7\3\2\2\2\u01b7^\3\2\2\2\u01b8\u01ba\t\t\2\2"+
		"\u01b9\u01b8\3\2\2\2\u01ba\u01bb\3\2\2\2\u01bb\u01b9\3\2\2\2\u01bb\u01bc"+
		"\3\2\2\2\u01bc\u01bd\3\2\2\2\u01bd\u01be\b\60\2\2\u01be`\3\2\2\2\u01bf"+
		"\u01c0\7\'\2\2\u01c0\u01c1\7\'\2\2\u01c1\u01c2\7\'\2\2\u01c2\u01c6\3\2"+
		"\2\2\u01c3\u01c5\n\n\2\2\u01c4\u01c3\3\2\2\2\u01c5\u01c8\3\2\2\2\u01c6"+
		"\u01c4\3\2\2\2\u01c6\u01c7\3\2\2\2\u01c7\u01c9\3\2\2\2\u01c8\u01c6\3\2"+
		"\2\2\u01c9\u01ca\7\'\2\2\u01ca\u01cb\7\'\2\2\u01cb\u01cc\7\'\2\2\u01cc"+
		"\u01cd\3\2\2\2\u01cd\u01ce\b\61\2\2\u01ceb\3\2\2\2\u01cf\u01d0\7\'\2\2"+
		"\u01d0\u01d1\7\'\2\2\u01d1\u01d5\3\2\2\2\u01d2\u01d4\n\5\2\2\u01d3\u01d2"+
		"\3\2\2\2\u01d4\u01d7\3\2\2\2\u01d5\u01d3\3\2\2\2\u01d5\u01d6\3\2\2\2\u01d6"+
		"\u01d8\3\2\2\2\u01d7\u01d5\3\2\2\2\u01d8\u01d9\b\62\2\2\u01d9d\3\2\2\2"+
		"\64\2hmsz\u0081\u0089\u008f\u0092\u009e\u00a3\u00dc\u00f0\u00fc\u010a"+
		"\u0178\u017a\u017c\u017e\u0180\u0182\u0184\u0186\u0188\u018a\u018c\u018e"+
		"\u0190\u0192\u0194\u0196\u0198\u019a\u019c\u019e\u01a0\u01a2\u01a4\u01a6"+
		"\u01a8\u01aa\u01ac\u01ae\u01b0\u01b2\u01b4\u01b6\u01bb\u01c6\u01d5\3\b"+
		"\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}